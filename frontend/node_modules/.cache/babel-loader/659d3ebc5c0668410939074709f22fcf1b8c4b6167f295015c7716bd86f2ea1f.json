{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mgris\\\\Documents\\\\ElectronicKanban\\\\frontend\\\\src\\\\components\\\\ClienteDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Heading, Flex, Button, useToast, SimpleGrid } from '@chakra-ui/react';\nimport axios from '../utils/axiosConfig';\nimport { useParams } from 'react-router-dom';\nimport KanbanCard from './KanbanCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClienteDashboard = () => {\n  _s();\n  const {\n    clienteId\n  } = useParams();\n  const [kanbanList, setKanbanList] = useState([]);\n  const toast = useToast();\n  const [groupedKanban, setGroupedKanban] = useState({});\n  useEffect(() => {\n    const fetchKanban = async () => {\n      try {\n        const response = await axios.get(`/api/dashboard/clienti/${clienteId}`);\n        setKanbanList(response.data);\n      } catch (error) {\n        toast({\n          title: 'Errore durante il caricamento dei dati',\n          description: 'Si è verificato un errore durante il caricamento dei kanban del cliente.',\n          status: 'error',\n          duration: 5000,\n          isClosable: true\n        });\n      }\n    };\n    fetchKanban();\n  }, [clienteId, toast]);\n  useEffect(() => {\n    // Raggruppa i cartellini per codice prodotto\n    const grouped = kanbanList.reduce((acc, kanban) => {\n      const prodottoCodice = kanban.prodotto.descrizione;\n      if (!acc[prodottoCodice]) {\n        acc[prodottoCodice] = [];\n      }\n      acc[prodottoCodice].push(kanban);\n      return acc;\n    }, {});\n\n    // Ordina i cartellini di ogni gruppo, mettendo prima quelli attivi\n    for (const prodottoCodice in grouped) {\n      grouped[prodottoCodice].sort((a, b) => {\n        if (a.stato === 'Attivo' && b.stato !== 'Attivo') {\n          return -1;\n        } else if (a.stato !== 'Attivo' && b.stato === 'Attivo') {\n          return 1;\n        }\n        return 0;\n      });\n    }\n    setGroupedKanban(grouped);\n  }, [kanbanList]);\n  const handleSvuotaKanban = async kanbanId => {\n    try {\n      await axios.put(`/api/kanban/${kanbanId}`, {\n        stato: 'Svuotato'\n      });\n      setKanbanList(kanbanList.map(kanban => kanban.id === kanbanId ? {\n        ...kanban,\n        stato: 'Svuotato'\n      } : kanban));\n      toast({\n        title: 'Kanban svuotato',\n        status: 'success',\n        duration: 3000,\n        isClosable: true\n      });\n    } catch (error) {\n      toast({\n        title: 'Errore durante l\\'aggiornamento',\n        description: 'Si è verificato un errore durante lo svuotamento del kanban.',\n        status: 'error',\n        duration: 5000,\n        isClosable: true\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 4,\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      mb: 4,\n      children: \"Dashboard Cliente\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), Object.keys(groupedKanban).length === 0 ? /*#__PURE__*/_jsxDEV(Box, {\n      children: \"Nessun kanban trovato\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }, this) : Object.keys(groupedKanban).map(prodottoCodice => /*#__PURE__*/_jsxDEV(Box, {\n      mb: 6,\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        size: \"md\",\n        mb: 2,\n        children: prodottoCodice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        wrap: \"wrap\",\n        children: groupedKanban[prodottoCodice].map(kanban => /*#__PURE__*/_jsxDEV(KanbanCard, {\n          kanban: kanban,\n          children: kanban.stato === 'Attivo' && /*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"red\",\n            onClick: () => handleSvuotaKanban(kanban.id),\n            children: \"Svuota\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 43\n          }, this)\n        }, kanban.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 39\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 30\n      }, this)]\n    }, prodottoCodice, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 24\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n_s(ClienteDashboard, \"vJM96pzYtyEUXy20L3+6zPnvlfc=\", false, function () {\n  return [useParams, useToast];\n});\n_c = ClienteDashboard;\nexport default ClienteDashboard;\nvar _c;\n$RefreshReg$(_c, \"ClienteDashboard\");","map":{"version":3,"names":["React","useState","useEffect","Box","Heading","Flex","Button","useToast","SimpleGrid","axios","useParams","KanbanCard","jsxDEV","_jsxDEV","ClienteDashboard","_s","clienteId","kanbanList","setKanbanList","toast","groupedKanban","setGroupedKanban","fetchKanban","response","get","data","error","title","description","status","duration","isClosable","grouped","reduce","acc","kanban","prodottoCodice","prodotto","descrizione","push","sort","a","b","stato","handleSvuotaKanban","kanbanId","put","map","id","p","children","mb","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","length","size","wrap","colorScheme","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mgris/Documents/ElectronicKanban/frontend/src/components/ClienteDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Box,\r\n    Heading,\r\n    Flex,\r\n    Button,\r\n    useToast,\r\n    SimpleGrid,\r\n} from '@chakra-ui/react';\r\nimport axios from '../utils/axiosConfig';\r\nimport { useParams } from 'react-router-dom';\r\nimport KanbanCard from './KanbanCard';\r\n\r\nconst ClienteDashboard = () => {\r\n    const { clienteId } = useParams();\r\n    const [kanbanList, setKanbanList] = useState([]);\r\n    const toast = useToast();\r\n    const [groupedKanban, setGroupedKanban] = useState({});\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchKanban = async () => {\r\n            try {\r\n                const response = await axios.get(`/api/dashboard/clienti/${clienteId}`);\r\n                setKanbanList(response.data);\r\n            } catch (error) {\r\n                 toast({\r\n                 title: 'Errore durante il caricamento dei dati',\r\n                    description: 'Si è verificato un errore durante il caricamento dei kanban del cliente.',\r\n                 status: 'error',\r\n                 duration: 5000,\r\n                 isClosable: true,\r\n                });\r\n            }\r\n        };\r\n\r\n        fetchKanban();\r\n    }, [clienteId, toast]);\r\n\r\n     useEffect(() => {\r\n        // Raggruppa i cartellini per codice prodotto\r\n        const grouped = kanbanList.reduce((acc, kanban) => {\r\n            const prodottoCodice = kanban.prodotto.descrizione;\r\n            if (!acc[prodottoCodice]) {\r\n                acc[prodottoCodice] = [];\r\n            }\r\n            acc[prodottoCodice].push(kanban);\r\n            return acc;\r\n        }, {});\r\n\r\n        // Ordina i cartellini di ogni gruppo, mettendo prima quelli attivi\r\n        for (const prodottoCodice in grouped) {\r\n            grouped[prodottoCodice].sort((a, b) => {\r\n                if (a.stato === 'Attivo' && b.stato !== 'Attivo') {\r\n                    return -1;\r\n                } else if (a.stato !== 'Attivo' && b.stato === 'Attivo') {\r\n                    return 1;\r\n                }\r\n                return 0;\r\n            });\r\n        }\r\n\r\n        setGroupedKanban(grouped);\r\n    }, [kanbanList]);\r\n\r\n    const handleSvuotaKanban = async (kanbanId) => {\r\n        try {\r\n            await axios.put(`/api/kanban/${kanbanId}`, { stato: 'Svuotato' });\r\n           setKanbanList(kanbanList.map(kanban => kanban.id === kanbanId ? { ...kanban, stato: 'Svuotato' } : kanban));\r\n            toast({\r\n                title: 'Kanban svuotato',\r\n                status: 'success',\r\n                duration: 3000,\r\n                isClosable: true,\r\n            });\r\n        } catch (error) {\r\n              toast({\r\n                title: 'Errore durante l\\'aggiornamento',\r\n                description: 'Si è verificato un errore durante lo svuotamento del kanban.',\r\n                status: 'error',\r\n                duration: 5000,\r\n                isClosable: true,\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box p={4}>\r\n            <Heading mb={4}>Dashboard Cliente</Heading>\r\n            {Object.keys(groupedKanban).length === 0 ? (\r\n                    <Box>Nessun kanban trovato</Box>\r\n                ) : (\r\n                    Object.keys(groupedKanban).map((prodottoCodice) => (\r\n                       <Box key={prodottoCodice} mb={6}>\r\n                           <Heading size=\"md\" mb={2}>{prodottoCodice}</Heading>\r\n                             <Flex wrap=\"wrap\" >\r\n                               {groupedKanban[prodottoCodice].map((kanban) => (\r\n                                      <KanbanCard key={kanban.id} kanban={kanban}>\r\n                                        {kanban.stato === 'Attivo' &&\r\n                                          <Button colorScheme=\"red\" onClick={() => handleSvuotaKanban(kanban.id)} >Svuota</Button>\r\n                                        }\r\n                                    </KanbanCard>\r\n                                ))\r\n                             }\r\n                             </Flex>\r\n                        </Box>\r\n                   ))\r\n             )}\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default ClienteDashboard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACIC,GAAG,EACHC,OAAO,EACPC,IAAI,EACJC,MAAM,EACNC,QAAQ,EACRC,UAAU,QACP,kBAAkB;AACzB,OAAOC,KAAK,MAAM,sBAAsB;AACxC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IAAEC;EAAU,CAAC,GAAGN,SAAS,CAAC,CAAC;EACjC,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMkB,KAAK,GAAGZ,QAAQ,CAAC,CAAC;EACxB,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAGtDC,SAAS,CAAC,MAAM;IACZ,MAAMoB,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,0BAA0BR,SAAS,EAAE,CAAC;QACvEE,aAAa,CAACK,QAAQ,CAACE,IAAI,CAAC;MAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACXP,KAAK,CAAC;UACNQ,KAAK,EAAE,wCAAwC;UAC5CC,WAAW,EAAE,0EAA0E;UAC1FC,MAAM,EAAE,OAAO;UACfC,QAAQ,EAAE,IAAI;UACdC,UAAU,EAAE;QACb,CAAC,CAAC;MACN;IACJ,CAAC;IAEDT,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,CAACN,SAAS,EAAEG,KAAK,CAAC,CAAC;EAErBjB,SAAS,CAAC,MAAM;IACb;IACA,MAAM8B,OAAO,GAAGf,UAAU,CAACgB,MAAM,CAAC,CAACC,GAAG,EAAEC,MAAM,KAAK;MAC/C,MAAMC,cAAc,GAAGD,MAAM,CAACE,QAAQ,CAACC,WAAW;MAClD,IAAI,CAACJ,GAAG,CAACE,cAAc,CAAC,EAAE;QACtBF,GAAG,CAACE,cAAc,CAAC,GAAG,EAAE;MAC5B;MACAF,GAAG,CAACE,cAAc,CAAC,CAACG,IAAI,CAACJ,MAAM,CAAC;MAChC,OAAOD,GAAG;IACd,CAAC,EAAE,CAAC,CAAC,CAAC;;IAEN;IACA,KAAK,MAAME,cAAc,IAAIJ,OAAO,EAAE;MAClCA,OAAO,CAACI,cAAc,CAAC,CAACI,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QACnC,IAAID,CAAC,CAACE,KAAK,KAAK,QAAQ,IAAID,CAAC,CAACC,KAAK,KAAK,QAAQ,EAAE;UAC9C,OAAO,CAAC,CAAC;QACb,CAAC,MAAM,IAAIF,CAAC,CAACE,KAAK,KAAK,QAAQ,IAAID,CAAC,CAACC,KAAK,KAAK,QAAQ,EAAE;UACrD,OAAO,CAAC;QACZ;QACA,OAAO,CAAC;MACZ,CAAC,CAAC;IACN;IAEAtB,gBAAgB,CAACW,OAAO,CAAC;EAC7B,CAAC,EAAE,CAACf,UAAU,CAAC,CAAC;EAEhB,MAAM2B,kBAAkB,GAAG,MAAOC,QAAQ,IAAK;IAC3C,IAAI;MACA,MAAMpC,KAAK,CAACqC,GAAG,CAAC,eAAeD,QAAQ,EAAE,EAAE;QAAEF,KAAK,EAAE;MAAW,CAAC,CAAC;MAClEzB,aAAa,CAACD,UAAU,CAAC8B,GAAG,CAACZ,MAAM,IAAIA,MAAM,CAACa,EAAE,KAAKH,QAAQ,GAAG;QAAE,GAAGV,MAAM;QAAEQ,KAAK,EAAE;MAAW,CAAC,GAAGR,MAAM,CAAC,CAAC;MAC1GhB,KAAK,CAAC;QACFQ,KAAK,EAAE,iBAAiB;QACxBE,MAAM,EAAE,SAAS;QACjBC,QAAQ,EAAE,IAAI;QACdC,UAAU,EAAE;MAChB,CAAC,CAAC;IACN,CAAC,CAAC,OAAOL,KAAK,EAAE;MACVP,KAAK,CAAC;QACJQ,KAAK,EAAE,iCAAiC;QACxCC,WAAW,EAAE,8DAA8D;QAC3EC,MAAM,EAAE,OAAO;QACfC,QAAQ,EAAE,IAAI;QACdC,UAAU,EAAE;MAChB,CAAC,CAAC;IACN;EACJ,CAAC;EAED,oBACIlB,OAAA,CAACV,GAAG;IAAC8C,CAAC,EAAE,CAAE;IAAAC,QAAA,gBACNrC,OAAA,CAACT,OAAO;MAAC+C,EAAE,EAAE,CAAE;MAAAD,QAAA,EAAC;IAAiB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,EAC1CC,MAAM,CAACC,IAAI,CAACrC,aAAa,CAAC,CAACsC,MAAM,KAAK,CAAC,gBAChC7C,OAAA,CAACV,GAAG;MAAA+C,QAAA,EAAC;IAAqB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,GAEhCC,MAAM,CAACC,IAAI,CAACrC,aAAa,CAAC,CAAC2B,GAAG,CAAEX,cAAc,iBAC3CvB,OAAA,CAACV,GAAG;MAAsBgD,EAAE,EAAE,CAAE;MAAAD,QAAA,gBAC5BrC,OAAA,CAACT,OAAO;QAACuD,IAAI,EAAC,IAAI;QAACR,EAAE,EAAE,CAAE;QAAAD,QAAA,EAAEd;MAAc;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU,CAAC,eAClD1C,OAAA,CAACR,IAAI;QAACuD,IAAI,EAAC,MAAM;QAAAV,QAAA,EACd9B,aAAa,CAACgB,cAAc,CAAC,CAACW,GAAG,CAAEZ,MAAM,iBACnCtB,OAAA,CAACF,UAAU;UAAiBwB,MAAM,EAAEA,MAAO;UAAAe,QAAA,EACxCf,MAAM,CAACQ,KAAK,KAAK,QAAQ,iBACxB9B,OAAA,CAACP,MAAM;YAACuD,WAAW,EAAC,KAAK;YAACC,OAAO,EAAEA,CAAA,KAAMlB,kBAAkB,CAACT,MAAM,CAACa,EAAE,CAAE;YAAAE,QAAA,EAAE;UAAM;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC,GAF3EpB,MAAM,CAACa,EAAE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIhB,CACf;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEC,CAAC;IAAA,GAXHnB,cAAc;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAYlB,CACT,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACxC,EAAA,CAjGID,gBAAgB;EAAA,QACIJ,SAAS,EAEjBH,QAAQ;AAAA;AAAAwD,EAAA,GAHpBjD,gBAAgB;AAmGtB,eAAeA,gBAAgB;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}