{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mgris\\\\Documents\\\\ElectronicKanban\\\\frontend\\\\src\\\\components\\\\ClienteDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Heading, Flex, Button, useToast } from '@chakra-ui/react';\nimport axios from '../utils/axiosConfig';\nimport { useParams } from 'react-router-dom';\nimport KanbanCard from './KanbanCard';\nimport QrScanner from 'react-qr-scanner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClienteDashboard = () => {\n  _s();\n  const {\n    clienteId\n  } = useParams();\n  const [kanbanList, setKanbanList] = useState([]);\n  const toast = useToast();\n  const [scanning, setScanning] = useState(false);\n  const [scanResult, setScanResult] = useState('');\n  const [groupedKanban, setGroupedKanban] = useState({});\n  useEffect(() => {\n    const fetchKanban = async () => {\n      try {\n        const response = await axios.get(`/api/dashboard/clienti/${clienteId}`);\n        setKanbanList(response.data);\n      } catch (error) {\n        toast({\n          title: 'Errore durante il caricamento dei dati',\n          description: 'Si è verificato un errore durante il caricamento dei kanban del cliente.',\n          status: 'error',\n          duration: 5000,\n          isClosable: true\n        });\n      }\n    };\n    fetchKanban();\n  }, [clienteId, toast]);\n  useEffect(() => {\n    // Raggruppa i cartellini per codice prodotto e riordina\n    const grouped = kanbanList.reduce((acc, kanban) => {\n      var _kanban$prodotto;\n      const prodottoCodice = (_kanban$prodotto = kanban.prodotto) === null || _kanban$prodotto === void 0 ? void 0 : _kanban$prodotto.descrizione;\n      if (!acc[prodottoCodice]) {\n        acc[prodottoCodice] = [];\n      }\n      acc[prodottoCodice].push(kanban);\n      return acc;\n    }, {});\n    for (const prodottoCodice in grouped) {\n      grouped[prodottoCodice].sort((a, b) => {\n        if (a.stato === 'Attivo' && b.stato !== 'Attivo') {\n          return -1;\n        } else if (a.stato !== 'Attivo' && b.stato === 'Attivo') {\n          return 1;\n        }\n        return 0;\n      });\n    }\n    setGroupedKanban(grouped);\n  }, [kanbanList]);\n  const handleSvuotaKanban = async kanbanId => {\n    try {\n      await axios.put(`/api/kanban/${kanbanId}/stato`, {\n        stato: 'Svuotato'\n      });\n      setKanbanList(kanbanList.map(kanban => kanban.id === kanbanId ? {\n        ...kanban,\n        stato: 'Svuotato'\n      } : kanban));\n      toast({\n        title: 'Kanban svuotato',\n        status: 'success',\n        duration: 3000,\n        isClosable: true\n      });\n    } catch (error) {\n      toast({\n        title: 'Errore durante l\\'aggiornamento',\n        description: 'Si è verificato un errore durante lo svuotamento del kanban.',\n        status: 'error',\n        duration: 5000,\n        isClosable: true\n      });\n    }\n  };\n  const handleScan = result => {\n    if (result) {\n      setScanning(false);\n      setScanResult(result.text);\n      //Estraggo l'id del kanban\n      const idKanban = result.text.split(\":\")[1];\n      if (idKanban) {\n        handleSvuotaKanban(parseInt(idKanban, 10));\n      }\n    }\n  };\n  const handleError = err => {\n    console.error(err);\n    toast({\n      title: 'Errore durante la scansione del QR code',\n      description: 'Si è verificato un errore durante la scansione del QR code.',\n      status: 'error',\n      duration: 5000,\n      isClosable: true\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 4,\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      mb: 4,\n      children: \"Dashboard Cliente\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setScanning(!scanning),\n      colorScheme: \"teal\",\n      mb: 4,\n      children: scanning ? \"Chiudi Scanner\" : \"Apri Scanner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 14\n    }, this), scanning && /*#__PURE__*/_jsxDEV(QrScanner, {\n      onError: handleError,\n      onScan: handleScan,\n      style: {\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }, this), Object.keys(groupedKanban).length === 0 ? /*#__PURE__*/_jsxDEV(Box, {\n      children: \"Nessun kanban trovato\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 19\n    }, this) : Object.keys(groupedKanban).map(prodottoCodice => /*#__PURE__*/_jsxDEV(Box, {\n      mb: 6,\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        size: \"md\",\n        mb: 2,\n        children: prodottoCodice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        wrap: \"wrap\",\n        children: groupedKanban[prodottoCodice].map(kanban => /*#__PURE__*/_jsxDEV(KanbanCard, {\n          kanban: kanban,\n          children: kanban.stato === 'Attivo' && /*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"red\",\n            onClick: () => handleSvuotaKanban(kanban.id),\n            children: \"Svuota\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 39\n          }, this)\n        }, kanban.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 27\n      }, this)]\n    }, prodottoCodice, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 22\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n};\n_s(ClienteDashboard, \"7krpckOJPFlQsqABWn8s4zaKWXE=\", false, function () {\n  return [useParams, useToast];\n});\n_c = ClienteDashboard;\nexport default ClienteDashboard;\nvar _c;\n$RefreshReg$(_c, \"ClienteDashboard\");","map":{"version":3,"names":["React","useState","useEffect","Box","Heading","Flex","Button","useToast","axios","useParams","KanbanCard","QrScanner","jsxDEV","_jsxDEV","ClienteDashboard","_s","clienteId","kanbanList","setKanbanList","toast","scanning","setScanning","scanResult","setScanResult","groupedKanban","setGroupedKanban","fetchKanban","response","get","data","error","title","description","status","duration","isClosable","grouped","reduce","acc","kanban","_kanban$prodotto","prodottoCodice","prodotto","descrizione","push","sort","a","b","stato","handleSvuotaKanban","kanbanId","put","map","id","handleScan","result","text","idKanban","split","parseInt","handleError","err","console","p","children","mb","fileName","_jsxFileName","lineNumber","columnNumber","onClick","colorScheme","onError","onScan","style","width","Object","keys","length","size","wrap","_c","$RefreshReg$"],"sources":["C:/Users/mgris/Documents/ElectronicKanban/frontend/src/components/ClienteDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Box,\r\n    Heading,\r\n    Flex,\r\n    Button,\r\n    useToast,\r\n} from '@chakra-ui/react';\r\nimport axios from '../utils/axiosConfig';\r\nimport { useParams } from 'react-router-dom';\r\nimport KanbanCard from './KanbanCard';\r\nimport QrScanner from 'react-qr-scanner';\r\n\r\nconst ClienteDashboard = () => {\r\n    const { clienteId } = useParams();\r\n    const [kanbanList, setKanbanList] = useState([]);\r\n    const toast = useToast();\r\n     const [scanning, setScanning] = useState(false);\r\n     const [scanResult, setScanResult] = useState('');\r\n      const [groupedKanban, setGroupedKanban] = useState({});\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchKanban = async () => {\r\n            try {\r\n                const response = await axios.get(`/api/dashboard/clienti/${clienteId}`);\r\n                setKanbanList(response.data);\r\n            } catch (error) {\r\n                 toast({\r\n                 title: 'Errore durante il caricamento dei dati',\r\n                    description: 'Si è verificato un errore durante il caricamento dei kanban del cliente.',\r\n                 status: 'error',\r\n                 duration: 5000,\r\n                 isClosable: true,\r\n                });\r\n            }\r\n        };\r\n\r\n        fetchKanban();\r\n    }, [clienteId, toast]);\r\n    useEffect(() => {\r\n    // Raggruppa i cartellini per codice prodotto e riordina\r\n      const grouped = kanbanList.reduce((acc, kanban) => {\r\n          const prodottoCodice = kanban.prodotto?.descrizione;\r\n          if (!acc[prodottoCodice]) {\r\n              acc[prodottoCodice] = [];\r\n          }\r\n          acc[prodottoCodice].push(kanban);\r\n          return acc;\r\n      }, {});\r\n     for (const prodottoCodice in grouped) {\r\n          grouped[prodottoCodice].sort((a, b) => {\r\n                if (a.stato === 'Attivo' && b.stato !== 'Attivo') {\r\n                    return -1;\r\n                } else if (a.stato !== 'Attivo' && b.stato === 'Attivo') {\r\n                    return 1;\r\n                }\r\n              return 0;\r\n           });\r\n        }\r\n      setGroupedKanban(grouped);\r\n    }, [kanbanList]);\r\n\r\n     const handleSvuotaKanban = async (kanbanId) => {\r\n        try {\r\n             await axios.put(`/api/kanban/${kanbanId}/stato`, { stato: 'Svuotato' });\r\n            setKanbanList(kanbanList.map(kanban => kanban.id === kanbanId ? { ...kanban, stato: 'Svuotato' } : kanban));\r\n            toast({\r\n                title: 'Kanban svuotato',\r\n                status: 'success',\r\n                duration: 3000,\r\n                isClosable: true,\r\n            });\r\n        } catch (error) {\r\n            toast({\r\n               title: 'Errore durante l\\'aggiornamento',\r\n                description: 'Si è verificato un errore durante lo svuotamento del kanban.',\r\n                status: 'error',\r\n                duration: 5000,\r\n                isClosable: true,\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleScan = (result) => {\r\n         if (result) {\r\n            setScanning(false);\r\n            setScanResult(result.text);\r\n             //Estraggo l'id del kanban\r\n            const idKanban = result.text.split(\":\")[1]\r\n            if (idKanban) {\r\n               handleSvuotaKanban(parseInt(idKanban,10));\r\n            }\r\n          }\r\n    };\r\n\r\n      const handleError = (err) => {\r\n         console.error(err);\r\n          toast({\r\n               title: 'Errore durante la scansione del QR code',\r\n                description: 'Si è verificato un errore durante la scansione del QR code.',\r\n               status: 'error',\r\n               duration: 5000,\r\n              isClosable: true,\r\n           });\r\n      }\r\n\r\n    return (\r\n        <Box p={4}>\r\n            <Heading mb={4}>Dashboard Cliente</Heading>\r\n             <Button onClick={() => setScanning(!scanning)} colorScheme=\"teal\" mb={4}>\r\n               {scanning ? \"Chiudi Scanner\" : \"Apri Scanner\"}\r\n              </Button>\r\n              {scanning &&\r\n                <QrScanner\r\n                   onError={handleError}\r\n                   onScan={handleScan}\r\n                  style={{ width: '100%' }}\r\n               />\r\n               }\r\n               {Object.keys(groupedKanban).length === 0 ? (\r\n                  <Box>Nessun kanban trovato</Box>\r\n              ) : (\r\n                 Object.keys(groupedKanban).map((prodottoCodice) => (\r\n                     <Box key={prodottoCodice} mb={6}>\r\n                          <Heading size=\"md\" mb={2}>{prodottoCodice}</Heading>\r\n                          <Flex wrap=\"wrap\">\r\n                              {groupedKanban[prodottoCodice].map((kanban) => (\r\n                                <KanbanCard key={kanban.id} kanban={kanban}>\r\n                                    {kanban.stato === 'Attivo' &&\r\n                                      <Button colorScheme=\"red\" onClick={() => handleSvuotaKanban(kanban.id)} >Svuota</Button>\r\n                                    }\r\n                                </KanbanCard>\r\n                               ))}\r\n                          </Flex>\r\n                      </Box>\r\n                   ))\r\n              )}\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default ClienteDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}